{"version":3,"file":"main.5be123374a57d3b862f8.bundle.js","sources":["webpack:///./src/stories/List/List.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport ListElement from './ListElement';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50rem;\n`;\n\nconst Headers = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: #0091DA !important;\n    height: 4rem;\n    align-items: center;\n\n    li {\n        padding-left: 1rem;\n        list-style: none;\n        flex: 1 1 10rem;\n        color: white;\n    }\n`;\n\nconst UlContainer = styled.ul`\n    display: flex;\n    flex-direction: column;\n    \n    margin: 0;\n    padding: 0;\n\n    div:nth-child(2n + 1 ) {\n        background-color: lightgray;\n    }\n`;\n\nconst Button = styled.button`\n    width: 10rem;\n    height: 2rem;\n    cursor: pointer;\n    margin: 1rem 0 1rem 0;\n    background-color: #0091DA;\n    color: white;\n    border: none;\n    border-radius: 0.5rem;\n\n`;\n\nclass List extends Component {\n\n    state = {\n        showAll: false,\n    }\n\n    handleShowAll = () => {\n        this.setState( prevState => ({\n            showAll: !prevState.showAll,\n        }))\n    }\n\n    render() {\n\n        const { data } = this.props;\n        const { showAll } = this.state;\n\n        let objLength = Object.entries(data).slice(1).length;\n        let dataWithoutHeaders = Object.values(data).slice(1);\n    \n        let dataObjShortend = Object.values(dataWithoutHeaders).slice(0,5);\n        \n        let payload;\n\n        if ( showAll ) {\n            payload = dataWithoutHeaders;\n        } else {\n            payload = dataObjShortend;\n        }\n\n        return ( \n            <Container>\n                <UlContainer>\n                    <Headers>\n                        { data.headers.map(el => <li>{el}</li>)}\n                    </Headers>\n    \n                    {/* { objLength >= 5 ? Object.entries(dataObjShortend).map(el => <ListElement data={el[1]} />) : Object.entries(data).slice(1).map(el => <ListElement data={el[1]} />)} */}\n\n                    { Object.entries(payload).map(el => <ListElement data={el[1]} />) }\n\n                </UlContainer>\n                <Button onClick={this.handleShowAll}>Show all</Button>\n            </Container>\n        );\n    }\n} \n\nexport default List;"],"mappings":"AAKA","sourceRoot":""}